name: Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true # Checkout private submodules(themes or something else).
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v3
      id: cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install --frozen-lockfile --dev
    # Deploy hexo blog website.
    - name: Deploy
      id: deploy
      run: |
        mkdir /home/runner/.ssh
        echo "${{ secrets.DEPLOY_KEY }}" > /home/runner/.ssh/id_rsa
        chmod 600 /home/runner/.ssh/id_rsa
        git config --global user.email "blog_deployer@yuxuan.lu"
        git config --global user.name "Yuxuan Lu"
        # Initialize target with currently deployed files
        rm -rf .deploy_git
        git clone --depth 1 --branch=master https://github.com/leoleoasd/blog.git .deploy_git
        cd .deploy_git
        # Remove all files before they get copied from ../public/
        # so git can track files that were removed in the last commit
        find . -path ./.git -prune -o -exec rm -rf {} \; 2> /dev/null
        cd ../
        ./node_modules/.bin/hexo g -d -m "${{ github.event.head_commit.message }}"
